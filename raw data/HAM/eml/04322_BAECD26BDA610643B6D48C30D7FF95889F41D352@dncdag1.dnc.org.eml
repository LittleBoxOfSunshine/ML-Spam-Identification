Received: from DNCDAG1.dnc.org ([fe80::f85f:3b98:e405:6ebe]) by
 DNCHUBCAS1.dnc.org ([fe80::ac16:e03c:a689:8203%11]) with mapi id
 14.03.0224.002; Fri, 13 May 2016 13:46:25 -0400
From: "Brinster, Jeremy" <BrinsterJ@dnc.org>
To: Comm_D <Comm_D@dnc.org>
Subject: FW: ICYMI: Donald Trump and the Art of the Tax Loophole
Thread-Topic: ICYMI: Donald Trump and the Art of the Tax Loophole
Thread-Index: AQHRrT8XgzpleVTt3kG1O0dmaBOMWJ+3Z0sA
Date: Fri, 13 May 2016 10:46:24 -0700
Message-ID: <BAECD26BDA610643B6D48C30D7FF95889F41D352@dncdag1.dnc.org>
References:
 <CAPUCnfVt+5QMnMBTrPWLzufm4LJkjLsBDQrjJD1gvHD_AaQK7g@mail.gmail.com>
In-Reply-To:
 <CAPUCnfVt+5QMnMBTrPWLzufm4LJkjLsBDQrjJD1gvHD_AaQK7g@mail.gmail.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Exchange-Organization-AuthAs: Internal
X-MS-Exchange-Organization-AuthMechanism: 04
X-MS-Exchange-Organization-AuthSource: DNCHUBCAS1.dnc.org
X-MS-Has-Attach:
X-Auto-Response-Suppress: DR, OOF, AutoReply
X-MS-Exchange-Organization-SCL: -1
X-MS-TNEF-Correlator:
x-originating-ip: [192.168.176.227]
Content-Type: multipart/alternative;
	boundary="_000_BAECD26BDA610643B6D48C30D7FF95889F41D352dncdag1dncorg_"
MIME-Version: 1.0

--_000_BAECD26BDA610643B6D48C30D7FF95889F41D352dncdag1dncorg_
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64

DQoNCkZyb206IEhpbGxhcnkgZm9yIEFtZXJpY2EgUHJlc3MgW21haWx0bzpwcmVzc0BoaWxsYXJ5
Y2xpbnRvbi5jb21dDQpTZW50OiBGcmlkYXksIE1heSAxMywgMjAxNiAxOjQ0IFBNDQpUbzogSGls
bGFyeSBmb3IgQW1lcmljYSBQcmVzcw0KU3ViamVjdDogSUNZTUk6IERvbmFsZCBUcnVtcCBhbmQg
dGhlIEFydCBvZiB0aGUgVGF4IExvb3Bob2xlDQoNCklOIENBU0UgWU9VIE1JU1NFRCBJVA0KDQpE
b25hbGQgVHJ1bXAgYW5kIHRoZSBBcnQgb2YgdGhlIFRheCBMb29waG9sZQ0KVGhlIE5ldyBZb3Jr
IFRpbWVzDQpCeSBTdGV2ZW4gUmF0dG5lcg0KTWF5IDEzLCAyMDE2DQpodHRwOi8vd3d3Lm55dGlt
ZXMuY29tLzIwMTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWlnbjxodHRwOi8vd3d3Lm55dGltZXMuY29t
LzIwMTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWlnbi1zdG9wcy9kb25hbGQtdHJ1bXAtYW5kLXRoZS1h
cnQtb2YtdGhlLXRheC1sb29waG9sZS5odG1sPg0K4oCLLeKAizxodHRwOi8vd3d3Lm55dGltZXMu
Y29tLzIwMTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWlnbi1zdG9wcy9kb25hbGQtdHJ1bXAtYW5kLXRo
ZS1hcnQtb2YtdGhlLXRheC1sb29waG9sZS5odG1sPg0Kc3RvcHMvZG9uYWxkLXRydW1wLWFuZC10
aGUtYXJ0LW9mLXRoZS10YXgtbG9vcGhvbGUuaHRtbDxodHRwOi8vd3d3Lm55dGltZXMuY29tLzIw
MTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWlnbi1zdG9wcy9kb25hbGQtdHJ1bXAtYW5kLXRoZS1hcnQt
b2YtdGhlLXRheC1sb29waG9sZS5odG1sPg0KDQpUWVBFIOKAnFRydW1wIHN5c3RlbSByaWdnZWTi
gJ0gaW50byB0aGUgR29vZ2xlIHNlYXJjaCBiYXIgYW5kIHlvdeKAmWxsIGdldCBtb3JlIHRoYW4g
NTAwLDAwMCBoaXRzLiBJIGRpZG7igJl0IGluc3BlY3QgYWxsIG9mIHRoZW0gYnV0IHRoZSBmaXJz
dCA1MCB3ZXJlIHZhcmlhbnRzIG9mIERvbmFsZCBUcnVtcCBjb21wbGFpbmluZyB0aGF0IHRoZSBS
ZXB1YmxpY2FuIHByaW1hcnkgcHJvY2VzcyB3YXMgdGlsdGVkIGFnYWluc3QgaGltLg0KDQpUaGF0
4oCZcyBiZXlvbmQgaXJvbmljLiBNci4gVHJ1bXAgYW5kIGhpcyBmYW1pbHkgaGF2ZSBiZWVuIHRo
ZSBiZW5lZmljaWFyaWVzIG9mIGEgZ3JlYXQgcmlnZ2VkIHN5c3RlbTogdGhlIHRheCBjb2RlLCB3
aGljaCBiZXN0b3dzIGh1Z2UgYWR2YW50YWdlcyBvbiB0aGUgcmVhbCBlc3RhdGUgYnVzaW5lc3Mu
IFRocm91Z2hvdXQgaGlzIGNhcmVlciwgTXIuIFRydW1wIGhhcyBub3Qgb25seSBncmFiYmVkIGZv
ciBldmVyeSBsb29waG9sZSBhbmQgbGVnYWwgbGV2ZXIgaGUgY291bGQgZmluZCwgaGXigJlzIGJv
YXN0ZWQgYWJvdXQgaXQuDQoNCuKAnEnigJl2ZSB0YWtlbiBhZHZhbnRhZ2Ugb2YgdGhlIGxhd3Mg
b2YgdGhpcyBjb3VudHJ5LCBsaWtlIG90aGVyIHBlb3BsZSzigJ0gTXIuIFRydW1wIGhhcyBzYWlk
Lg0KDQpUaGUgUmVwdWJsaWNhbiBmcm9udC1ydW5uZXIgaGFzIGJlZW4gZG9kZ2luZyByZWxlYXNp
bmcgaGlzIHJldHVybnMgb24gdGhlIHNwZWNpb3VzIGdyb3VuZHMgdGhhdCBoZSB3YXMgYmVpbmcg
YXVkaXRlZC4gT24gVHVlc2RheSwgaGUgdG9sZCBUaGUgQXNzb2NpYXRlZCBQcmVzcyB0aGF0IGhl
IHdvdWxkbuKAmXQgcmVsZWFzZSB0aGVtIGJlZm9yZSB0aGUgZWxlY3Rpb24g4oCUIHBlcmlvZC4g
T24gV2VkbmVzZGF5LCBoZSBkZW5pZWQgc2F5aW5nIHRoaXMsIHJldmVyc2VkIGNvdXJzZSBhbmQg
c2FpZCzigJxIb3BlZnVsbHkgYmVmb3JlIHRoZSBlbGVjdGlvbiBJ4oCZbGwgcmVsZWFzZS7igJ0N
Cg0K4oCcVGhlcmXigJlzIG5vdGhpbmcgdG8gbGVhcm4gZnJvbSB0aGVtLOKAnSBoZSBzYWlkIGlu
IHRoZSBBc3NvY2lhdGVkIFByZXNzIGludGVydmlldy4NCg0KSeKAmWxsIGJldCB0aGVyZeKAmXMg
cGxlbnR5IHRvIGxlYXJuLiBNb3JlIGxpa2VseSwgTXIuIFRydW1wIGRvZXNu4oCZdCB3YW50IHVz
IHRvIGtub3cgaG93IHNtYWxsIGhpcyB0YXggaGl0IGlzLCBzb21ldGhpbmcgdGhhdCBoZSBicmFn
Z2VkIGFib3V0IGVhcmxpZXIgaW4gdGhlIGNhbXBhaWduLCBiZWZvcmUgcmVhbGl6aW5nIHRoYXQg
aXQgY291bGQgY29tZSBiYWNrIHRvIGJpdGUgaGltLg0KDQrigJxJIGZpZ2h0IGxpa2UgaGVsbCB0
byBwYXkgYXMgbGl0dGxlIGFzIHBvc3NpYmxlLOKAnSBNci4gVHJ1bXAgc2FpZCBsYXN0IEF1Z3Vz
dC4NCg0KUmVhbCBlc3RhdGUgZ3V5cyBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIGJlc3QgbG9v
cGhvbGVzIGxlZnQgaW4gdGhlIHRheCBjb2RlLCB0aGFua3MgaW4gcGFydCB0byBzb21lIGFnZ3Jl
c3NpdmUgbnVkZ2luZyBvZiBsYXdtYWtlcnMuIEZvciBzdGFydGVycywgcmVhbCBlc3RhdGUgaW52
ZXN0b3JzIGNhbiB0YWtlIGRlZHVjdGlvbnMgZm9yIHRoZSBvc3RlbnNpYmxlIGRlcHJlY2lhdGlv
biBvZiB0aGUgdmFsdWUgb2YgdGhlaXIgYnVpbGRpbmdzLCBldmVuIHRob3VnaCB0aGUgcG9pbnQg
b2Ygb3duaW5nIGJ1aWxkaW5ncyBpcyB0aGF0IHRoZXkgZ2VuZXJhbGx5IGFwcHJlY2lhdGUuDQoN
CkZvciBhbm90aGVyLCB0aGV5IG9mdGVuIGJvcnJvdyBhZ2FpbnN0IHRob3NlIHByb3BlcnRpZXMs
IGFuZCBiZWNhdXNlIHRoZXkgaG9sZCB0aGVzZSBpbnZlc3RtZW50cyBpbiBwYXJ0bmVyc2hpcHMg
b3IgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFuaWVzLCB0aGUgaW50ZXJlc3QgcGF5bWVudHMgYXJl
IHRheC1kZWR1Y3RpYmxlLg0KDQrigJxJZiB5b3UgZ2V0IGNsb3NlIHRvIHBheWluZyB0YXhlcywg
eW91IGp1c3QgYnV5IGFub3RoZXIgYnVpbGRpbmcs4oCdIGEgcmVhbCBlc3RhdGUgZnJpZW5kIHRv
bGQgbWUuDQoNCklmIE1yLiBUcnVtcCB3ZXJlIHRvIHNlbGwgYSBwcm9wZXJ0eSwgdGhlIHByb2Zp
dHMgd291bGQgYmUgdGF4ZWQgYXMgY2FwaXRhbCBnYWlucyBhdCBmYXIgbG93ZXIgcmF0ZXMgKDIz
LjggcGVyY2VudCkgdGhhbiB0aG9zZSBpbXBvc2VkIG9uIG9yZGluYXJ5IGluY29tZSAoMzkuNiBw
ZXJjZW50KS4gQnV0IHJlYWwgZXN0YXRlIG93bmVycyBvZnRlbiBkb27igJl0IGV2ZW4gcGF5IGNh
cGl0YWwgZ2FpbnMgdGF4ZXMuIFRoZXkgY2FuIHRha2UgYWR2YW50YWdlIG9mIGEgcHJvdmlzaW9u
IGtub3duIGFzIFNlY3Rpb24gMTAzMSB0byBzd2FwIGEgcGllY2Ugb2YgcmVhbCBlc3RhdGUgdGhh
dCB0aGV5IGFyZSByZWFkeSB0byBwYXJ0IHdpdGggZm9yIG9uZSB0aGF0IHRoZXkgd291bGQgbGlr
ZSB0byBhZGQgdG8gdGhlaXIgcG9ydGZvbGlvIOKAlCBhbGwgdGF4IGZyZWUuIFRoZXJlIGlzIG5v
IGxpbWl0IG9uIGhvdyBtYW55IHN3YXBzIHRoZXkgY2FuIG1ha2UsIGRlZmVycmluZyBjYXBpdGFs
IGdhaW5zIHRheGVzIGluZGVmaW5pdGVseS4NCg0KU2VjdGlvbiAxMDMxIGlzIGFtb25nIHRoZSBy
ZWFsIGVzdGF0ZSBvcGVyYXRvcnPigJkgZmF2b3JpdGUgcHJvdmlzaW9ucyDigJQgYW5kIGl04oCZ
cyBhIGJyZWFrIG5vdCByZWFkaWx5IGF2YWlsYWJsZSB0byBvdGhlciBraW5kcyBvZiBpbnZlc3Rv
cnMuIE5vIHdvbmRlciB0aGF0IGF0dGVtcHRzIHRvIHJlaW4gaW4gb3IgZWxpbWluYXRlIFNlY3Rp
b24gMTAzMSwgaW5jbHVkaW5nIGEgcmVjZW50IG9uZSBieSB0aGUgT2JhbWEgYWRtaW5pc3RyYXRp
b24sIGhhdmUgYmVlbiBtZXQgd2l0aCBmaWVyY2UgcmVzaXN0YW5jZSBmcm9tIHRoZSBpbmR1c3Ry
eS4NCg0KVGhlIHRheCBiZW5lZml0cyBkb27igJl0IHN0b3AsIGV2ZW4gYXQgZGVhdGguIElmIGFu
IGludmVzdG9yIGRpZXMgaG9sZGluZyBhcHByZWNpYXRlZCBwcm9wZXJ0aWVzLCB0aGUgaGVpcnMg
Z2V0IGEgc3RlcCB1cCBpbiBiYXNpcywgd2hpY2ggbWVhbnMgdGhhdCB0aGV5IGNhbiBzZWxsIHRo
ZSByZWFsIGVzdGF0ZSBhbmQgcGF5IG5vIHRheGVzIG9uIHRoZSBnYWluIGluIHZhbHVlLg0KDQpN
ci4gVHJ1bXDigJlzIHF1ZXN0IGZvciBsb29waG9sZXMgcmFuZ2VzIGZhci4gSW4gMjAwNSwgaGUg
Z290IGEgJDM5LjEgbWlsbGlvbiB0YXggZGVkdWN0aW9uIGZvciBkb25hdGluZyBhIGNvbnNlcnZh
dGlvbiBlYXNlbWVudCBvbiBhIE5ldyBKZXJzZXkgZ29sZiBjb3Vyc2UsIG1lYW5pbmcgdGhhdCBh
bnkgZnVydGhlciBkZXZlbG9wbWVudCBvbiB0aGUgcHJvcGVydHkgaXMgcmVzdHJpY3RlZC4gT24g
dG9wIG9mIHRoYXQsIGhlIGluc3RhbGxlZCBnb2F0cyBvbiB0d28gb2YgaGlzIE5ldyBKZXJzZXkg
Z29sZiBjb3Vyc2VzIGFzIHBhcnQgb2YgYSBwbGFuIHRvIGdldCB0aGVtIGRlc2lnbmF0ZWQgYXMg
YWdyaWN1bHR1cmFsIHByb3BlcnRpZXMsIHRoZXJlYnkgdmFzdGx5IGxvd2VyaW5nIGhpcyBwcm9w
ZXJ0eSB0YXhlcy4NCg0KTWVhbndoaWxlLCBhY2NvcmRpbmcgdG8gTXIuIFRydW1w4oCZcyBjYW1w
YWlnbiwgZnJvbSAyMDEwIHRvIDIwMTQsIGhlIOKAnGRvbmF0ZWTigJ0gbW9yZSB0aGFuICQxMDIg
bWlsbGlvbiB0byBjaGFyaXR5IOKAlCB3aXRob3V0IGdpdmluZyBhd2F5IGV2ZW4gJDEgb2YgaGlz
IG93biBtb25leS4gTW9yZSBjb25zZXJ2YXRpb24gZWFzZW1lbnRzIGNvbnN0aXR1dGVkIHRoZSBi
aWdnZXN0IHNvdXJjZSBvZiBkZWR1Y3Rpb25zLCBidXQgdGhlIOKAnGdpZnRz4oCdIGluY2x1ZGVk
IGl0ZW1zIGxpa2UgZnJlZSByb3VuZHMgb2YgZ29sZiBmb3IgY2hhcml0eSBldmVudHMuIE1hbnkg
b2YgdGhlc2Ug4oCcY2hhcml0YWJsZSBjb250cmlidXRpb25zLOKAnSBvZiBjb3Vyc2UsIGdhdmUg
cmlzZSB0byBtb3JlIHRheCBkZWR1Y3Rpb25zLg0KDQpUYXhlcyBhcmUgZmFyIGZyb20gdGhlIG9u
bHkgd2F5IHRoYXQgTXIuIFRydW1wIGhhcyBnYW1lZCB0aGUgc3lzdGVtLiBIZeKAmXMgYWRkZWQg
bWF0ZXJpYWxseSB0byBoaXMgbmV0IHdvcnRoIGJ5IHB1c2hpbmcgdGhlIGVkZ2VzIG9mIHRoZSBi
YW5rcnVwdGN5IGxhd3MuDQoNCkJ5IGFyZ3VpbmcgdGhhdCBoaXMgbmFtZSBoYWQgaHVnZSBjb21t
ZXJjaWFsIHZhbHVlLCBmb3IgZXhhbXBsZSwgaGUgbWFuYWdlZCB0byByZXRhaW4gbW9yZSBvd25l
cnNoaXAgaW4gaGlzIEF0bGFudGljIENpdHkgaG90ZWwgYW5kIGNhc2lubyBwcm9qZWN0cyB0aGFu
IGlzIGN1c3RvbWFyeSBpbiBhbiBpbnNvbHZlbmN5LCB0aGVyZWJ5IG1pbmltaXppbmcgaGlzIGxv
c3NlcyB3aGlsZSBoaXMgY3JlZGl0b3JzIGxvc3QgYmlsbGlvbnMuDQoNCkZpbmFsbHksIGJ5IGhp
cyBvd24gYWRtaXNzaW9uLCBNci4gVHJ1bXAgaGFzIHVzZWQgb3VyIGJyb2tlbiBjYW1wYWlnbiBm
aW5hbmNlIHN5c3RlbSB0byBhY2hpZXZlIHByaXZhdGUgZ2FpbiBieSBnaXZpbmcgZ2VuZXJvdXNs
eSB0byBwb2xpdGljaWFucyBvZiBib3RoIHBhcnRpZXMgKGluY2x1ZGluZyB0byBIaWxsYXJ5IENs
aW50b24pIGluIG9yZGVyIHRvIGdhaW4gaW5mbHVlbmNlLiBTaW5jZSAxOTg5LCBoZSBoYXMgZG9u
YXRlZCBtb3JlIHRoYW4gJDEuNSBtaWxsaW9uIHRvIHBvbGl0aWNhbCBjYXVzZXMsIDYyIHBlcmNl
bnQgb2YgaXQgZ29pbmcgdG8gUmVwdWJsaWNhbnMsIGFjY29yZGluZyB0byBQb2xpdGlGYWN0Lg0K
DQrigJxXaGVuIHRoZXkgY2FsbCwgSSBnaXZlLOKAnSBNci4gVHJ1bXAgc2FpZCBpbiB0aGUgZmly
c3QgUmVwdWJsaWNhbiBkZWJhdGUuIOKAnEFuZCB5b3Uga25vdyB3aGF0PyBXaGVuIEkgbmVlZCBz
b21ldGhpbmcgZnJvbSB0aGVtLCB0d28geWVhcnMgbGF0ZXIsIHRocmVlIHllYXJzIGxhdGVyLCBJ
IGNhbGwgdGhlbS4gVGhleSBhcmUgdGhlcmUgZm9yIG1lLuKAnQ0KDQpBbW9uZyB0aGUgd2F5cyB0
aGF0IHBvbGl0aWNpYW5zIGhhdmUgYmVlbiB0aGVyZSBmb3IgaGltIGFuZCBoaXMgYnJldGhyZW4g
aGFzIGJlZW4gZGV2ZWxvcGluZyBhIHRheCBzeXN0ZW0gaW4gd2hpY2ggcmVhbCBlc3RhdGUgbW9n
dWxzIHBheSBsaXR0bGUgb3Igbm8gdGF4ZXMuIOKAnFRoZSBEZWNsYXJhdGlvbiBvZiBJbmRlcGVu
ZGVuY2UgdGVsbHMgdXMgdGhhdCBhbGwgbWVuIGFyZSBjcmVhdGVkIGVxdWFsLCBidXQgdGhlIGdv
dmVybm1lbnQgZGVmaW5pdGVseSBmYXZvcnMgcmVhbCBlc3RhdGUgaW52ZXN0b3JzIeKAnSB3cm90
ZSBvbmUgc3VjaCBpbnZlc3RvciwgRGF2aWQgTGluZGFobC4gV2hlcmUgZGlkIHRoaXMgYXBwZWFy
PyDigJxUcnVtcCBVbml2ZXJzaXR5IENvbW1lcmNpYWwgUmVhbCBFc3RhdGUgSW52ZXN0aW5nIDEw
MS7igJ0NCi0tDQpZb3UgcmVjZWl2ZWQgdGhpcyBtZXNzYWdlIGJlY2F1c2UgeW91IGFyZSBzdWJz
Y3JpYmVkIHRvIHRoZSBHb29nbGUgR3JvdXBzICJOYXRpb25hbFByZXNzMjAxNiIgZ3JvdXAuDQpU
byB1bnN1YnNjcmliZSBmcm9tIHRoaXMgZ3JvdXAgYW5kIHN0b3AgcmVjZWl2aW5nIGVtYWlscyBm
cm9tIGl0LCBzZW5kIGFuIGVtYWlsIHRvIG5hdGlvbmFscHJlc3MyMDE2K3Vuc3Vic2NyaWJlQGhp
bGxhcnljbGludG9uLmNvbTxtYWlsdG86bmF0aW9uYWxwcmVzczIwMTYrdW5zdWJzY3JpYmVAaGls
bGFyeWNsaW50b24uY29tPi4NCg==

--_000_BAECD26BDA610643B6D48C30D7FF95889F41D352dncdag1dncorg_
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: base64

PGh0bWwgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiIHhtbG5zOm89InVy
bjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOm9mZmljZSIgeG1sbnM6dz0idXJuOnNjaGVt
YXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgeG1sbnM6bT0iaHR0cDovL3NjaGVtYXMubWlj
cm9zb2Z0LmNvbS9vZmZpY2UvMjAwNC8xMi9vbW1sIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv
VFIvUkVDLWh0bWw0MCI+DQo8aGVhZD4NCjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIg
Y29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4NCjxtZXRhIG5hbWU9IkdlbmVyYXRv
ciIgY29udGVudD0iTWljcm9zb2Z0IFdvcmQgMTQgKGZpbHRlcmVkIG1lZGl1bSkiPg0KPHN0eWxl
PjwhLS0NCi8qIEZvbnQgRGVmaW5pdGlvbnMgKi8NCkBmb250LWZhY2UNCgl7Zm9udC1mYW1pbHk6
IkNhbWJyaWEgTWF0aCI7DQoJcGFub3NlLTE6MiA0IDUgMyA1IDQgNiAzIDIgNDt9DQpAZm9udC1m
YWNlDQoJe2ZvbnQtZmFtaWx5OkNhbGlicmk7DQoJcGFub3NlLTE6MiAxNSA1IDIgMiAyIDQgMyAy
IDQ7fQ0KQGZvbnQtZmFjZQ0KCXtmb250LWZhbWlseTpUYWhvbWE7DQoJcGFub3NlLTE6MiAxMSA2
IDQgMyA1IDQgNCAyIDQ7fQ0KQGZvbnQtZmFjZQ0KCXtmb250LWZhbWlseTpHZW9yZ2lhOw0KCXBh
bm9zZS0xOjIgNCA1IDIgNSA0IDUgMiAzIDM7fQ0KLyogU3R5bGUgRGVmaW5pdGlvbnMgKi8NCnAu
TXNvTm9ybWFsLCBsaS5Nc29Ob3JtYWwsIGRpdi5Nc29Ob3JtYWwNCgl7bWFyZ2luOjBpbjsNCglt
YXJnaW4tYm90dG9tOi4wMDAxcHQ7DQoJZm9udC1zaXplOjEyLjBwdDsNCglmb250LWZhbWlseToi
VGltZXMgTmV3IFJvbWFuIiwic2VyaWYiO30NCmE6bGluaywgc3Bhbi5Nc29IeXBlcmxpbmsNCgl7
bXNvLXN0eWxlLXByaW9yaXR5Ojk5Ow0KCWNvbG9yOmJsdWU7DQoJdGV4dC1kZWNvcmF0aW9uOnVu
ZGVybGluZTt9DQphOnZpc2l0ZWQsIHNwYW4uTXNvSHlwZXJsaW5rRm9sbG93ZWQNCgl7bXNvLXN0
eWxlLXByaW9yaXR5Ojk5Ow0KCWNvbG9yOnB1cnBsZTsNCgl0ZXh0LWRlY29yYXRpb246dW5kZXJs
aW5lO30NCnANCgl7bXNvLXN0eWxlLXByaW9yaXR5Ojk5Ow0KCW1zby1tYXJnaW4tdG9wLWFsdDph
dXRvOw0KCW1hcmdpbi1yaWdodDowaW47DQoJbXNvLW1hcmdpbi1ib3R0b20tYWx0OmF1dG87DQoJ
bWFyZ2luLWxlZnQ6MGluOw0KCWZvbnQtc2l6ZToxMi4wcHQ7DQoJZm9udC1mYW1pbHk6IlRpbWVz
IE5ldyBSb21hbiIsInNlcmlmIjt9DQpzcGFuLkVtYWlsU3R5bGUxOA0KCXttc28tc3R5bGUtdHlw
ZTpwZXJzb25hbC1yZXBseTsNCglmb250LWZhbWlseToiQ2FsaWJyaSIsInNhbnMtc2VyaWYiOw0K
CWNvbG9yOiMxRjQ5N0Q7fQ0KLk1zb0NocERlZmF1bHQNCgl7bXNvLXN0eWxlLXR5cGU6ZXhwb3J0
LW9ubHk7DQoJZm9udC1mYW1pbHk6IkNhbGlicmkiLCJzYW5zLXNlcmlmIjt9DQpAcGFnZSBXb3Jk
U2VjdGlvbjENCgl7c2l6ZTo4LjVpbiAxMS4waW47DQoJbWFyZ2luOjEuMGluIDEuMGluIDEuMGlu
IDEuMGluO30NCmRpdi5Xb3JkU2VjdGlvbjENCgl7cGFnZTpXb3JkU2VjdGlvbjE7fQ0KLS0+PC9z
dHlsZT48IS0tW2lmIGd0ZSBtc28gOV0+PHhtbD4NCjxvOnNoYXBlZGVmYXVsdHMgdjpleHQ9ImVk
aXQiIHNwaWRtYXg9IjEwMjYiIC8+DQo8L3htbD48IVtlbmRpZl0tLT48IS0tW2lmIGd0ZSBtc28g
OV0+PHhtbD4NCjxvOnNoYXBlbGF5b3V0IHY6ZXh0PSJlZGl0Ij4NCjxvOmlkbWFwIHY6ZXh0PSJl
ZGl0IiBkYXRhPSIxIiAvPg0KPC9vOnNoYXBlbGF5b3V0PjwveG1sPjwhW2VuZGlmXS0tPg0KPC9o
ZWFkPg0KPGJvZHkgbGFuZz0iRU4tVVMiIGxpbms9ImJsdWUiIHZsaW5rPSJwdXJwbGUiPg0KPGRp
diBjbGFzcz0iV29yZFNlY3Rpb24xIj4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPjxzcGFuIHN0eWxl
PSJmb250LXNpemU6MTEuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O0NhbGlicmkmcXVvdDssJnF1b3Q7
c2Fucy1zZXJpZiZxdW90Oztjb2xvcjojMUY0OTdEIj48bzpwPiZuYnNwOzwvbzpwPjwvc3Bhbj48
L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtm
b250LWZhbWlseTomcXVvdDtDYWxpYnJpJnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29s
b3I6IzFGNDk3RCI+PG86cD4mbmJzcDs8L286cD48L3NwYW4+PC9wPg0KPHAgY2xhc3M9Ik1zb05v
cm1hbCI+PGI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMC4wcHQ7Zm9udC1mYW1pbHk6JnF1b3Q7
VGFob21hJnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDsiPkZyb206PC9zcGFuPjwvYj48c3Bh
biBzdHlsZT0iZm9udC1zaXplOjEwLjBwdDtmb250LWZhbWlseTomcXVvdDtUYWhvbWEmcXVvdDss
JnF1b3Q7c2Fucy1zZXJpZiZxdW90OyI+IEhpbGxhcnkgZm9yIEFtZXJpY2EgUHJlc3MgW21haWx0
bzpwcmVzc0BoaWxsYXJ5Y2xpbnRvbi5jb21dDQo8YnI+DQo8Yj5TZW50OjwvYj4gRnJpZGF5LCBN
YXkgMTMsIDIwMTYgMTo0NCBQTTxicj4NCjxiPlRvOjwvYj4gSGlsbGFyeSBmb3IgQW1lcmljYSBQ
cmVzczxicj4NCjxiPlN1YmplY3Q6PC9iPiBJQ1lNSTogRG9uYWxkIFRydW1wIGFuZCB0aGUgQXJ0
IG9mIHRoZSBUYXggTG9vcGhvbGU8bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNv
Tm9ybWFsIj48bzpwPiZuYnNwOzwvbzpwPjwvcD4NCjxkaXY+DQo8cCBjbGFzcz0iTXNvTm9ybWFs
Ij48Yj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6JnF1b3Q7R2VvcmdpYSZxdW90OywmcXVvdDtz
ZXJpZiZxdW90OyI+SU4gQ0FTRSBZT1UgTUlTU0VEIElUPGJyPg0KPGJyPg0KRG9uYWxkIFRydW1w
IGFuZCB0aGUgQXJ0IG9mIHRoZSBUYXggTG9vcGhvbGU8YnI+DQpUaGUgTmV3IFlvcmsgVGltZXM8
YnI+DQpCeSBTdGV2ZW4gUmF0dG5lcjxicj4NCk1heSAxMywgMjAxNjxicj4NCjxhIGhyZWY9Imh0
dHA6Ly93d3cubnl0aW1lcy5jb20vMjAxNi8wNS8xMy9vcGluaW9uL2NhbXBhaWduLXN0b3BzL2Rv
bmFsZC10cnVtcC1hbmQtdGhlLWFydC1vZi10aGUtdGF4LWxvb3Bob2xlLmh0bWwiIHRhcmdldD0i
X2JsYW5rIj5odHRwOi8vd3d3Lm55dGltZXMuY29tLzIwMTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWln
bjxvOnA+PC9vOnA+PC9hPjwvc3Bhbj48L2I+PC9wPg0KPGRpdj4NCjxwIGNsYXNzPSJNc29Ob3Jt
YWwiPjxiPjx1PjxzcGFuIHN0eWxlPSJjb2xvcjpibHVlIj48YSBocmVmPSJodHRwOi8vd3d3Lm55
dGltZXMuY29tLzIwMTYvMDUvMTMvb3Bpbmlvbi9jYW1wYWlnbi1zdG9wcy9kb25hbGQtdHJ1bXAt
YW5kLXRoZS1hcnQtb2YtdGhlLXRheC1sb29waG9sZS5odG1sIiB0YXJnZXQ9Il9ibGFuayI+4oCL
PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiZxdW90O0dlb3JnaWEmcXVvdDssJnF1b3Q7c2VyaWYm
cXVvdDsiPi08L3NwYW4+4oCLPHNwYW4gc3R5bGU9ImNvbG9yOndpbmRvd3RleHQ7Zm9udC13ZWln
aHQ6bm9ybWFsO3RleHQtZGVjb3JhdGlvbjpub25lIj48bzpwPjwvbzpwPjwvc3Bhbj48L2E+PC9z
cGFuPjwvdT48L2I+PC9wPg0KPC9kaXY+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48c3BhbiBjbGFz
cz0iTXNvSHlwZXJsaW5rIj48Yj48c3BhbiBzdHlsZT0iZm9udC1mYW1pbHk6JnF1b3Q7R2Vvcmdp
YSZxdW90OywmcXVvdDtzZXJpZiZxdW90OyI+PGEgaHJlZj0iaHR0cDovL3d3dy5ueXRpbWVzLmNv
bS8yMDE2LzA1LzEzL29waW5pb24vY2FtcGFpZ24tc3RvcHMvZG9uYWxkLXRydW1wLWFuZC10aGUt
YXJ0LW9mLXRoZS10YXgtbG9vcGhvbGUuaHRtbCIgdGFyZ2V0PSJfYmxhbmsiPnN0b3BzL2RvbmFs
ZC10cnVtcC1hbmQtdGhlLWFydC1vZi10aGUtdGF4LWxvb3Bob2xlLmh0bWw8L2E+PC9zcGFuPjwv
Yj48L3NwYW4+PHNwYW4gc3R5bGU9ImZvbnQtZmFtaWx5OiZxdW90O0dlb3JnaWEmcXVvdDssJnF1
b3Q7c2VyaWYmcXVvdDsiPjxicj4NCjxicj4NClRZUEUg4oCcVHJ1bXAgc3lzdGVtIHJpZ2dlZOKA
nSBpbnRvIHRoZSBHb29nbGUgc2VhcmNoIGJhciBhbmQgeW914oCZbGwgZ2V0IG1vcmUgdGhhbiA1
MDAsMDAwIGhpdHMuIEkgZGlkbuKAmXQgaW5zcGVjdCBhbGwgb2YgdGhlbSBidXQgdGhlIGZpcnN0
IDUwIHdlcmUgdmFyaWFudHMgb2YgRG9uYWxkIFRydW1wIGNvbXBsYWluaW5nIHRoYXQgdGhlIFJl
cHVibGljYW4gcHJpbWFyeSBwcm9jZXNzIHdhcyB0aWx0ZWQgYWdhaW5zdCBoaW0uPGJyPg0KPGJy
Pg0KVGhhdOKAmXMgYmV5b25kIGlyb25pYy4gTXIuIFRydW1wIGFuZCBoaXMgZmFtaWx5IGhhdmUg
YmVlbiB0aGUgYmVuZWZpY2lhcmllcyBvZiBhIGdyZWF0IHJpZ2dlZCBzeXN0ZW06IHRoZSB0YXgg
Y29kZSwgd2hpY2ggYmVzdG93cyBodWdlIGFkdmFudGFnZXMgb24gdGhlIHJlYWwgZXN0YXRlIGJ1
c2luZXNzLiBUaHJvdWdob3V0IGhpcyBjYXJlZXIsIE1yLiBUcnVtcCBoYXMgbm90IG9ubHkgZ3Jh
YmJlZCBmb3IgZXZlcnkgbG9vcGhvbGUgYW5kIGxlZ2FsDQogbGV2ZXIgaGUgY291bGQgZmluZCwg
aGXigJlzIGJvYXN0ZWQgYWJvdXQgaXQuPGJyPg0KPGJyPg0K4oCcSeKAmXZlIHRha2VuIGFkdmFu
dGFnZSBvZiB0aGUgbGF3cyBvZiB0aGlzIGNvdW50cnksIGxpa2Ugb3RoZXIgcGVvcGxlLOKAnSBN
ci4gVHJ1bXAgaGFzIHNhaWQuPGJyPg0KPGJyPg0KVGhlIFJlcHVibGljYW4gZnJvbnQtcnVubmVy
IGhhcyBiZWVuIGRvZGdpbmcgcmVsZWFzaW5nIGhpcyByZXR1cm5zIG9uIHRoZSBzcGVjaW91cyBn
cm91bmRzIHRoYXQgaGUgd2FzIGJlaW5nIGF1ZGl0ZWQuIE9uIFR1ZXNkYXksIGhlIHRvbGQgVGhl
IEFzc29jaWF0ZWQgUHJlc3MgdGhhdCBoZSB3b3VsZG7igJl0IHJlbGVhc2UgdGhlbSBiZWZvcmUg
dGhlIGVsZWN0aW9uIOKAlCBwZXJpb2QuIE9uIFdlZG5lc2RheSwgaGUgZGVuaWVkIHNheWluZyB0
aGlzLCByZXZlcnNlZA0KIGNvdXJzZSBhbmQgc2FpZCzigJxIb3BlZnVsbHkgYmVmb3JlIHRoZSBl
bGVjdGlvbiBJ4oCZbGwgcmVsZWFzZS7igJ08YnI+DQo8YnI+DQrigJxUaGVyZeKAmXMgbm90aGlu
ZyB0byBsZWFybiBmcm9tIHRoZW0s4oCdIGhlIHNhaWQgaW4gdGhlIEFzc29jaWF0ZWQgUHJlc3Mg
aW50ZXJ2aWV3Ljxicj4NCjxicj4NCknigJlsbCBiZXQgdGhlcmXigJlzIHBsZW50eSB0byBsZWFy
bi4gTW9yZSBsaWtlbHksIE1yLiBUcnVtcCBkb2VzbuKAmXQgd2FudCB1cyB0byBrbm93IGhvdyBz
bWFsbCBoaXMgdGF4IGhpdCBpcywgc29tZXRoaW5nIHRoYXQgaGUgYnJhZ2dlZCBhYm91dCBlYXJs
aWVyIGluIHRoZSBjYW1wYWlnbiwgYmVmb3JlIHJlYWxpemluZyB0aGF0IGl0IGNvdWxkIGNvbWUg
YmFjayB0byBiaXRlIGhpbS48YnI+DQo8YnI+DQrigJxJIGZpZ2h0IGxpa2UgaGVsbCB0byBwYXkg
YXMgbGl0dGxlIGFzIHBvc3NpYmxlLOKAnSBNci4gVHJ1bXAgc2FpZCBsYXN0IEF1Z3VzdC48YnI+
DQo8YnI+DQpSZWFsIGVzdGF0ZSBndXlzIGNhbiB0YWtlIGFkdmFudGFnZSBvZiB0aGUgYmVzdCBs
b29waG9sZXMgbGVmdCBpbiB0aGUgdGF4IGNvZGUsIHRoYW5rcyBpbiBwYXJ0IHRvIHNvbWUgYWdn
cmVzc2l2ZSBudWRnaW5nIG9mIGxhd21ha2Vycy4gRm9yIHN0YXJ0ZXJzLCByZWFsIGVzdGF0ZSBp
bnZlc3RvcnMgY2FuIHRha2UgZGVkdWN0aW9ucyBmb3IgdGhlIG9zdGVuc2libGUgZGVwcmVjaWF0
aW9uIG9mIHRoZSB2YWx1ZSBvZiB0aGVpciBidWlsZGluZ3MsDQogZXZlbiB0aG91Z2ggdGhlIHBv
aW50IG9mIG93bmluZyBidWlsZGluZ3MgaXMgdGhhdCB0aGV5IGdlbmVyYWxseSBhcHByZWNpYXRl
Ljxicj4NCjxicj4NCkZvciBhbm90aGVyLCB0aGV5IG9mdGVuIGJvcnJvdyBhZ2FpbnN0IHRob3Nl
IHByb3BlcnRpZXMsIGFuZCBiZWNhdXNlIHRoZXkgaG9sZCB0aGVzZSBpbnZlc3RtZW50cyBpbiBw
YXJ0bmVyc2hpcHMgb3IgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFuaWVzLCB0aGUgaW50ZXJlc3Qg
cGF5bWVudHMgYXJlIHRheC1kZWR1Y3RpYmxlLjxicj4NCjxicj4NCuKAnElmIHlvdSBnZXQgY2xv
c2UgdG8gcGF5aW5nIHRheGVzLCB5b3UganVzdCBidXkgYW5vdGhlciBidWlsZGluZyzigJ0gYSBy
ZWFsIGVzdGF0ZSBmcmllbmQgdG9sZCBtZS48YnI+DQo8YnI+DQpJZiBNci4gVHJ1bXAgd2VyZSB0
byBzZWxsIGEgcHJvcGVydHksIHRoZSBwcm9maXRzIHdvdWxkIGJlIHRheGVkIGFzIGNhcGl0YWwg
Z2FpbnMgYXQgZmFyIGxvd2VyIHJhdGVzICgyMy44IHBlcmNlbnQpIHRoYW4gdGhvc2UgaW1wb3Nl
ZCBvbiBvcmRpbmFyeSBpbmNvbWUgKDM5LjYgcGVyY2VudCkuIEJ1dCByZWFsIGVzdGF0ZSBvd25l
cnMgb2Z0ZW4gZG9u4oCZdCBldmVuIHBheSBjYXBpdGFsIGdhaW5zIHRheGVzLiBUaGV5IGNhbiB0
YWtlIGFkdmFudGFnZQ0KIG9mIGEgcHJvdmlzaW9uIGtub3duIGFzIFNlY3Rpb24gMTAzMSB0byBz
d2FwIGEgcGllY2Ugb2YgcmVhbCBlc3RhdGUgdGhhdCB0aGV5IGFyZSByZWFkeSB0byBwYXJ0IHdp
dGggZm9yIG9uZSB0aGF0IHRoZXkgd291bGQgbGlrZSB0byBhZGQgdG8gdGhlaXIgcG9ydGZvbGlv
IOKAlCBhbGwgdGF4IGZyZWUuIFRoZXJlIGlzIG5vIGxpbWl0IG9uIGhvdyBtYW55IHN3YXBzIHRo
ZXkgY2FuIG1ha2UsIGRlZmVycmluZyBjYXBpdGFsIGdhaW5zIHRheGVzIGluZGVmaW5pdGVseS48
YnI+DQo8YnI+DQpTZWN0aW9uIDEwMzEgaXMgYW1vbmcgdGhlIHJlYWwgZXN0YXRlIG9wZXJhdG9y
c+KAmSBmYXZvcml0ZSBwcm92aXNpb25zIOKAlCBhbmQgaXTigJlzIGEgYnJlYWsgbm90IHJlYWRp
bHkgYXZhaWxhYmxlIHRvIG90aGVyIGtpbmRzIG9mIGludmVzdG9ycy4gTm8gd29uZGVyIHRoYXQg
YXR0ZW1wdHMgdG8gcmVpbiBpbiBvciBlbGltaW5hdGUgU2VjdGlvbiAxMDMxLCBpbmNsdWRpbmcg
YSByZWNlbnQgb25lIGJ5IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiwgaGF2ZQ0KIGJlZW4gbWV0
IHdpdGggZmllcmNlIHJlc2lzdGFuY2UgZnJvbSB0aGUgaW5kdXN0cnkuPGJyPg0KPGJyPg0KVGhl
IHRheCBiZW5lZml0cyBkb27igJl0IHN0b3AsIGV2ZW4gYXQgZGVhdGguIElmIGFuIGludmVzdG9y
IGRpZXMgaG9sZGluZyBhcHByZWNpYXRlZCBwcm9wZXJ0aWVzLCB0aGUgaGVpcnMgZ2V0IGEgc3Rl
cCB1cCBpbiBiYXNpcywgd2hpY2ggbWVhbnMgdGhhdCB0aGV5IGNhbiBzZWxsIHRoZSByZWFsIGVz
dGF0ZSBhbmQgcGF5IG5vIHRheGVzIG9uIHRoZSBnYWluIGluIHZhbHVlLjxicj4NCjxicj4NCk1y
LiBUcnVtcOKAmXMgcXVlc3QgZm9yIGxvb3Bob2xlcyByYW5nZXMgZmFyLiBJbiAyMDA1LCBoZSBn
b3QgYSAkMzkuMSBtaWxsaW9uIHRheCBkZWR1Y3Rpb24gZm9yIGRvbmF0aW5nIGEgY29uc2VydmF0
aW9uIGVhc2VtZW50IG9uIGEgTmV3IEplcnNleSBnb2xmIGNvdXJzZSwgbWVhbmluZyB0aGF0IGFu
eSBmdXJ0aGVyIGRldmVsb3BtZW50IG9uIHRoZSBwcm9wZXJ0eSBpcyByZXN0cmljdGVkLiBPbiB0
b3Agb2YgdGhhdCwgaGUgaW5zdGFsbGVkIGdvYXRzDQogb24gdHdvIG9mIGhpcyBOZXcgSmVyc2V5
IGdvbGYgY291cnNlcyBhcyBwYXJ0IG9mIGEgcGxhbiB0byBnZXQgdGhlbSBkZXNpZ25hdGVkIGFz
IGFncmljdWx0dXJhbCBwcm9wZXJ0aWVzLCB0aGVyZWJ5IHZhc3RseSBsb3dlcmluZyBoaXMgcHJv
cGVydHkgdGF4ZXMuPGJyPg0KPGJyPg0KTWVhbndoaWxlLCBhY2NvcmRpbmcgdG8gTXIuIFRydW1w
4oCZcyBjYW1wYWlnbiwgZnJvbSAyMDEwIHRvIDIwMTQsIGhlIOKAnGRvbmF0ZWTigJ0gbW9yZSB0
aGFuICQxMDIgbWlsbGlvbiB0byBjaGFyaXR5IOKAlCB3aXRob3V0IGdpdmluZyBhd2F5IGV2ZW4g
JDEgb2YgaGlzIG93biBtb25leS4gTW9yZSBjb25zZXJ2YXRpb24gZWFzZW1lbnRzIGNvbnN0aXR1
dGVkIHRoZSBiaWdnZXN0IHNvdXJjZSBvZiBkZWR1Y3Rpb25zLCBidXQgdGhlIOKAnGdpZnRz4oCd
IGluY2x1ZGVkDQogaXRlbXMgbGlrZSBmcmVlIHJvdW5kcyBvZiBnb2xmIGZvciBjaGFyaXR5IGV2
ZW50cy4gTWFueSBvZiB0aGVzZSDigJxjaGFyaXRhYmxlIGNvbnRyaWJ1dGlvbnMs4oCdIG9mIGNv
dXJzZSwgZ2F2ZSByaXNlIHRvIG1vcmUgdGF4IGRlZHVjdGlvbnMuPGJyPg0KPGJyPg0KVGF4ZXMg
YXJlIGZhciBmcm9tIHRoZSBvbmx5IHdheSB0aGF0IE1yLiBUcnVtcCBoYXMgZ2FtZWQgdGhlIHN5
c3RlbS4gSGXigJlzIGFkZGVkIG1hdGVyaWFsbHkgdG8gaGlzIG5ldCB3b3J0aCBieSBwdXNoaW5n
IHRoZSBlZGdlcyBvZiB0aGUgYmFua3J1cHRjeSBsYXdzLjxicj4NCjxicj4NCkJ5IGFyZ3Vpbmcg
dGhhdCBoaXMgbmFtZSBoYWQgaHVnZSBjb21tZXJjaWFsIHZhbHVlLCBmb3IgZXhhbXBsZSwgaGUg
bWFuYWdlZCB0byByZXRhaW4gbW9yZSBvd25lcnNoaXAgaW4gaGlzIEF0bGFudGljIENpdHkgaG90
ZWwgYW5kIGNhc2lubyBwcm9qZWN0cyB0aGFuIGlzIGN1c3RvbWFyeSBpbiBhbiBpbnNvbHZlbmN5
LCB0aGVyZWJ5IG1pbmltaXppbmcgaGlzIGxvc3NlcyB3aGlsZSBoaXMgY3JlZGl0b3JzIGxvc3Qg
YmlsbGlvbnMuPGJyPg0KPGJyPg0KRmluYWxseSwgYnkgaGlzIG93biBhZG1pc3Npb24sIE1yLiBU
cnVtcCBoYXMgdXNlZCBvdXIgYnJva2VuIGNhbXBhaWduIGZpbmFuY2Ugc3lzdGVtIHRvIGFjaGll
dmUgcHJpdmF0ZSBnYWluIGJ5IGdpdmluZyBnZW5lcm91c2x5IHRvIHBvbGl0aWNpYW5zIG9mIGJv
dGggcGFydGllcyAoaW5jbHVkaW5nIHRvIEhpbGxhcnkgQ2xpbnRvbikgaW4gb3JkZXIgdG8gZ2Fp
biBpbmZsdWVuY2UuIFNpbmNlIDE5ODksIGhlIGhhcyBkb25hdGVkIG1vcmUgdGhhbg0KICQxLjUg
bWlsbGlvbiB0byBwb2xpdGljYWwgY2F1c2VzLCA2MiBwZXJjZW50IG9mIGl0IGdvaW5nIHRvIFJl
cHVibGljYW5zLCBhY2NvcmRpbmcgdG8gUG9saXRpRmFjdC48YnI+DQo8YnI+DQrigJxXaGVuIHRo
ZXkgY2FsbCwgSSBnaXZlLOKAnSBNci4gVHJ1bXAgc2FpZCBpbiB0aGUgZmlyc3QgUmVwdWJsaWNh
biBkZWJhdGUuIOKAnEFuZCB5b3Uga25vdyB3aGF0PyBXaGVuIEkgbmVlZCBzb21ldGhpbmcgZnJv
bSB0aGVtLCB0d28geWVhcnMgbGF0ZXIsIHRocmVlIHllYXJzIGxhdGVyLCBJIGNhbGwgdGhlbS4g
VGhleSBhcmUgdGhlcmUgZm9yIG1lLuKAnTxicj4NCjxicj4NCkFtb25nIHRoZSB3YXlzIHRoYXQg
cG9saXRpY2lhbnMgaGF2ZSBiZWVuIHRoZXJlIGZvciBoaW0gYW5kIGhpcyBicmV0aHJlbiBoYXMg
YmVlbiBkZXZlbG9waW5nIGEgdGF4IHN5c3RlbSBpbiB3aGljaCByZWFsIGVzdGF0ZSBtb2d1bHMg
cGF5IGxpdHRsZSBvciBubyB0YXhlcy4g4oCcVGhlIERlY2xhcmF0aW9uIG9mIEluZGVwZW5kZW5j
ZSB0ZWxscyB1cyB0aGF0IGFsbCBtZW4gYXJlIGNyZWF0ZWQgZXF1YWwsIGJ1dCB0aGUgZ292ZXJu
bWVudCBkZWZpbml0ZWx5DQogZmF2b3JzIHJlYWwgZXN0YXRlIGludmVzdG9ycyHigJ0gd3JvdGUg
b25lIHN1Y2ggaW52ZXN0b3IsIERhdmlkIExpbmRhaGwuIFdoZXJlIGRpZCB0aGlzIGFwcGVhcj8g
4oCcVHJ1bXAgVW5pdmVyc2l0eSBDb21tZXJjaWFsIFJlYWwgRXN0YXRlIEludmVzdGluZyAxMDEu
4oCdPC9zcGFuPjxvOnA+PC9vOnA+PC9wPg0KPC9kaXY+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj4t
LSA8YnI+DQpZb3UgcmVjZWl2ZWQgdGhpcyBtZXNzYWdlIGJlY2F1c2UgeW91IGFyZSBzdWJzY3Jp
YmVkIHRvIHRoZSBHb29nbGUgR3JvdXBzICZxdW90O05hdGlvbmFsUHJlc3MyMDE2JnF1b3Q7IGdy
b3VwLjxicj4NClRvIHVuc3Vic2NyaWJlIGZyb20gdGhpcyBncm91cCBhbmQgc3RvcCByZWNlaXZp
bmcgZW1haWxzIGZyb20gaXQsIHNlbmQgYW4gZW1haWwgdG8NCjxhIGhyZWY9Im1haWx0bzpuYXRp
b25hbHByZXNzMjAxNiYjNDM7dW5zdWJzY3JpYmVAaGlsbGFyeWNsaW50b24uY29tIj5uYXRpb25h
bHByZXNzMjAxNiYjNDM7dW5zdWJzY3JpYmVAaGlsbGFyeWNsaW50b24uY29tPC9hPi48bzpwPjwv
bzpwPjwvcD4NCjwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg0K

--_000_BAECD26BDA610643B6D48C30D7FF95889F41D352dncdag1dncorg_--
